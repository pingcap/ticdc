name: Integration-Mysql

on:
  push:
    branches:
      - master
      - "release-[0-9].[0-9]*"
    paths-ignore:
      - '**/*.md'
      - '**/OWNERS'
      - 'OWNERS'
      - 'OWNERS_ALIASES'

  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - master
      - "release-[0-9].[0-9]*"
    paths-ignore:
      - '**/*.md'
      - '**/OWNERS'
      - 'OWNERS'
      - 'OWNERS_ALIASES'

# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency.
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  # To boost the test speed, we split every 15 test cases into a group.
  e2e_test_group_1:
    ## Only run ci when PR is not draft
    if: github.event.pull_request.draft == false

    runs-on: ubuntu-latest 
    name: E2E Test Group 1
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Integration Build
        run: |
          tests/scripts/download-integration-test-binaries.sh master true
          go build -o ./tools/bin/failpoint-ctl github.com/pingcap/failpoint/failpoint-ctl 
          make integration_test_build
          ls -l bin/ && ls -l tools/bin/

      - name: Test charset_gbk
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=charset_gbk 

      - name: Test changefeed_finish
        if: ${{ success() }}
        run: |
          export TICDC_NEWARCH=true && make integration_test CASE=changefeed_finish
      
      - name: Test sql_mode
        if: ${{ success() }}
        run: |
          export TICDC_NEWARCH=true && make integration_test CASE=sql_mode
        
      # - name: Test changefeed_pause_resume
      #   if: ${{ success() }}
      #   run: |
      #     export TICDC_NEWARCH=true && make integration_test CASE=changefeed_pause_resume

      - name: Test changefeed_reconstruct
        if: ${{ success() }}
        run: |
          export TICDC_NEWARCH=true && make integration_test CASE=changefeed_reconstruct

      - name: Test common_1
        if: ${{ success() }}
        run: |
          export TICDC_NEWARCH=true && make integration_test CASE=common_1

      - name: Test foreign_key
        if: ${{ success() }}
        run: |
          export TICDC_NEWARCH=true && make integration_test CASE=foreign_key

      # The 7th case in this group
      - name: Test generate_column
        if: ${{ success() }}
        run: |
          export TICDC_NEWARCH=true && make integration_test CASE=generate_column
      
      # The 8th case in this group
      - name: Test many_pk_or_uk
        if: ${{ success() }}
        run: |
          export TICDC_NEWARCH=true && make integration_test CASE=many_pk_or_uk
      
      # The 9th case in this group
      - name: Test drop_many_tables
        if: ${{ success() }}
        run: |
          export TICDC_NEWARCH=true && make integration_test CASE=drop_many_tables

      # The 10th case in this group     
      - name: Test new_ci_collation
        if: ${{ success() }}
        run: |
          export TICDC_NEWARCH=true && make integration_test CASE=new_ci_collation

      # The 11th case in this group     
      - name: Test region_merge
        if: ${{ success() }}
        run: |
          export TICDC_NEWARCH=true && make integration_test CASE=region_merge

      - name: Upload test logs
        if: always()
        uses: ./.github/actions/upload-test-logs
        with:
          log-name: e2e_test_group_1


  failover_e2e_test1:
      ## Only run ci when PR is not draft
    if: github.event.pull_request.draft == false

    runs-on: ubuntu-latest 
    name: Failover E2E Test [A-C]
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Integration Build
        run: |
          tests/scripts/download-integration-test-binaries.sh master true
          go build -o ./tools/bin/failpoint-ctl github.com/pingcap/failpoint/failpoint-ctl 
          make integration_test_build
          ls -l bin/ && ls -l tools/bin/

      - name: Test fail_over
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over 
      
      - name: Test fail_over_ddl_A
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_A
      
      - name: Test fail_over_ddl_B
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_B
      
      - name: Test fail_over_ddl_C
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_C

      - name: Upload test logs
        if: always()
        uses: ./.github/actions/upload-test-logs
        with:
          log-name: failover_e2e_test1


  failover_e2e_test2:
      ## Only run ci when PR is not draft
    if: github.event.pull_request.draft == false

    runs-on: ubuntu-latest 
    name: Failover E2E Test[D-G]
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Integration Build
        run: |
          tests/scripts/download-integration-test-binaries.sh master true
          go build -o ./tools/bin/failpoint-ctl github.com/pingcap/failpoint/failpoint-ctl 
          make integration_test_build
          ls -l bin/ && ls -l tools/bin/
      
      - name: Test fail_over_ddl_D
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_D

      - name: Test fail_over_ddl_E
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_E
      
      - name: Test fail_over_ddl_F
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_F
      
      - name: Test fail_over_ddl_G
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_G

      - name: Upload test logs
        if: always()
        uses: ./.github/actions/upload-test-logs
        with:
          log-name: failover_e2e_test2


  failover_e2e_test3:
      ## Only run ci when PR is not draft
    if: github.event.pull_request.draft == false

    runs-on: ubuntu-latest 
    name: Failover E2E Test[H-K]
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Integration Build
        run: |
          tests/scripts/download-integration-test-binaries.sh master true
          go build -o ./tools/bin/failpoint-ctl github.com/pingcap/failpoint/failpoint-ctl 
          make integration_test_build
          ls -l bin/ && ls -l tools/bin/

      - name: Test fail_over_ddl_H
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_H

      - name: Test fail_over_ddl_I
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_I
      
      - name: Test fail_over_ddl_J
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_J

      - name: Test fail_over_ddl_K
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_K

      - name: Upload test logs
        if: always()
        uses: ./.github/actions/upload-test-logs
        with:
          log-name: failover_e2e_test3


  failover_e2e_test4:
      ## Only run ci when PR is not draft
    if: github.event.pull_request.draft == false
    
    runs-on: ubuntu-latest 
    name: Failover E2E Test[L-O]
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Integration Build
        run: |
          tests/scripts/download-integration-test-binaries.sh master true
          go build -o ./tools/bin/failpoint-ctl github.com/pingcap/failpoint/failpoint-ctl 
          make integration_test_build
          ls -l bin/ && ls -l tools/bin/

      - name: Test fail_over_ddl_L
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_L
      
      - name: Test fail_over_ddl_M
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=fail_over_ddl_M

      - name: Upload test logs
        if: always()
        uses: ./.github/actions/upload-test-logs
        with:
          log-name: failover_e2e_test4
